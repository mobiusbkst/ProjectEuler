# Problem 2 「偶数のフィボナッチ数」
#フィボナッチ数列の項は前の2つの項の和である. 最初の2項を 1, 2 とすれば, 最初の10項は以下の通りである.
#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#数列の項の値が400万以下の, 偶数値の項の総和を求めよ.
# http://odz.sakura.ne.jp/projecteuler/index.php?cmd=read&page=Problem%202

# Problem 2 Even Fibonacci numbers
#Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

def fibEvenSum()
  fibonacci = Array.new()
  i = 0
  sum = 0
  # フィボナッチ数を初項から求めていき偶数なら足しこんでいく。
  # 400万以上の項が現れたらbreakするというオーソドックスな手法
  loop do
    if i == 0
      fibonacci[i] = 1
    elsif i == 1
      fibonacci[i] = 2
    else
      fibonacci[i] = fibonacci[i-1] + fibonacci[i-2]
    end
    
    if(4000000 < fibonacci[i])
      break
    end
    
    if fibonacci[i] % 2 == 0
      sum += fibonacci[i]
    end
    i += 1
  end
  
  return sum
end

puts fibEvenSum()